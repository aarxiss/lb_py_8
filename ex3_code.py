import string

def analyze_text(text, ignore_spaces=True, ignore_digits=False, ignore_punctuation=False):
    filtered_text = text

    if ignore_spaces:
        filtered_text = filtered_text.replace(" ", "")
    if ignore_digits:
        filtered_text = ''.join(ch for ch in filtered_text if not ch.isdigit())
    if ignore_punctuation:
        filtered_text = ''.join(ch for ch in filtered_text if ch not in string.punctuation)

    # –ß–∞—Å—Ç–æ—Ç–∞ —Å–∏–º–≤–æ–ª—ñ–≤
    frequency = {}
    for ch in filtered_text:
        frequency[ch] = frequency.get(ch, 0) + 1

    unique_chars = set(frequency.keys())

    # –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É:")
    print("1Ô∏è‚É£ –ß–∞—Å—Ç–æ—Ç–∞ —Å–∏–º–≤–æ–ª—ñ–≤ (—Å–ª–æ–≤–Ω–∏–∫):")
    print(frequency)

    print("\n2Ô∏è‚É£ –£–Ω—ñ–∫–∞–ª—å–Ω—ñ —Å–∏–º–≤–æ–ª–∏ (–º–Ω–æ–∂–∏–Ω–∞):")
    print(unique_chars)

    # –í–∏–≤–µ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–∏, —â–æ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –ø–µ–≤–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞–∑—ñ–≤
    try:
        n = int(input("\nüî¢ –í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å, —â–æ–± –∑–Ω–∞–π—Ç–∏ —Å–∏–º–≤–æ–ª–∏, —è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è —Ä—ñ–≤–Ω–æ —Å—Ç—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤: "))
        filtered_by_n = [ch for ch, count in frequency.items() if count == n]
        print(f"üîç –°–∏–º–≤–æ–ª–∏, —è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è {n} —Ä–∞–∑—ñ–≤: {filtered_by_n}")
    except ValueError:
        print("‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–µ —á–∏—Å–ª–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ü—é —á–∞—Å—Ç–∏–Ω—É.")

# üßæ –û—Å–Ω–æ–≤–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == "__main__":
    user_text = input("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É: ")

    print("\nüîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:")
    ignore_spaces = input("–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ –ø—Ä–æ–±—ñ–ª–∏? (—Ç–∞–∫/–Ω—ñ): ").strip().lower() == "—Ç–∞–∫"
    ignore_digits = input("–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ —Ü–∏—Ñ—Ä–∏? (—Ç–∞–∫/–Ω—ñ): ").strip().lower() == "—Ç–∞–∫"
    ignore_punctuation = input("–Ü–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—é? (—Ç–∞–∫/–Ω—ñ): ").strip().lower() == "—Ç–∞–∫"

    analyze_text(user_text, ignore_spaces, ignore_digits, ignore_punctuation)
